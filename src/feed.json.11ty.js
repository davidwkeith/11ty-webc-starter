import Image from "@11ty/eleventy-img";

const imgConfig = {
  formats: ["webp", "jpeg"],
  outputDir: "./_site/img/",
  urlPath: "/img/",
  cacheOptions: {
    cacheDir: ".cache/eleventy-img/"
  }
};


export default class JSONFeed {

  data() {
    return {
      permalink: "/feed.json",
      eleventyExcludeFromCollections: true,
    }
  }

  async render(data) {
    const feed = {
      version: "https://jsonfeed.org/version/1",
      title: data.site.title,
      home_page_url: data.site.url,
      feed_url: new URL(this.data().permalink, data.site.url),
      description: data.site.description,

      // This is the URL of the 512 favicon generated by eleventy-plugin-gen-favicons, which is the reccomended size.
      icon: new URL("/icon-512.png", data.site.url),

      author: {
        name: data.schema.author?.name,
        url: data.schema.author?.url,
        avatar: data.schema.author?.image
      },
      items: [],
    };

    for (const item of data.collections['post']) {
      const url = new URL(item.url, data.site.url);
      const imgURL = item.data.hero?.src ? (await Image(item.data.hero.src, imgConfig)).webp[0]?.url : undefined;
      const bannerImgURL = item.data.banner?.src ? (await Image(item.data.banner.src, imgConfig)).webp[0]?.url : undefined;
  
      feed.items.push({
        id: url,
        title: item.data.title ?? "Untitled",
        url,
        content_html: item.templateContent ?? item.data.content ?? "ERROR: No content",
        summary: item.data.summary ?? item.data.description ?? undefined,
        image: imgURL ? new URL(imgURL, data.site.url) : undefined,
        banner_image: bannerImgURL ? new URL(bannerImgURL, data.site.url) : undefined,
        date_published: item.date.toISOString(),
        date_modified: item.date.toISOString(),
        author: {
          name: data.schema.author?.name,
          url: data.schema.author?.url,
          avatar: data.schema.author?.image
        },
        tags: item.data.tags ?? [],
        // TODO: add support for attachements (aka podcasts)
        // attachments: item.data.attachments ?? [],

      });
    }
    return JSON.stringify(feed);
  }
}